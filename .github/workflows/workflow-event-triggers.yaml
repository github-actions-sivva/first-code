# Env variables can be stored at the 
    # step level
    # job level
    # workflow level
# Inorder to access Org, Repo variables the syntax is ${{ vars.ENV_VARIABLE}}
name: Exploring Vars and Secrets
on:
  workflow_dispatch:  
#   schedule:
#     - cron: "*/1 * * * *"
env:
    CONTAINER_REGISTRY: docker.io
    DOCKER_USERNAME: i27k8s10
    IMAGE_NAME: github-action-nginx 
jobs:
######################## Environment Variables at the Job Level ########################
    Docker:
      env: #ENV_VARIABLE
        CONTAINER_REGISTRY: docker.io
        DOCKER_USERNAME: i27k8s10
        IMAGE_NAME: github-action-nginx 
      runs-on: ubuntu-latest
      steps:
        - name: Docker Build 
            # we can refer env variables in 2 ways 
            # $ENVNAME
            #${{ env.ENVNAME }}
          run: echo docker build -t $CONTAINER_REGISTRY/${{ env.DOCKER_USERNAME }}/$IMAGE_NAME:latest
        - name: Docker Login
          run: echo docker login --username=${{ env.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PSW }} 
        - name: Docker Publish
          run: echo docker push docker.io/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
    Docker-Deploy:
        needs: Docker
       # env:
        #    CONTAINER_REGISTRY: docker.io
         #   DOCKER_USERNAME: i27k8s10
          #  IMAGE_NAME: github-action-nginx 
        runs-on: ubuntu-latest
        steps:
        - name: Deploy
          run: echo docker run -d -p 8080:80 ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest 
    Echo-Envs:
        needs: Docker-Deploy
        runs-on: ubuntu-latest
        steps:
          - name: Echoing Env Variables
            run: echo ${{ vars.ENV_VARIABLE }}